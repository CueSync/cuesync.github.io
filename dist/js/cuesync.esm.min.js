/*!
  * CueSync v1.0.0 (https://cuesync.github.io/)
  * Copyright 2023-2024 Neeraj Kumar Das (https://github.com/nkdas91)
  * Licensed under MIT (https://github.com/cuesync/cuesync/blob/master/LICENSE)  
  */
const elementMap=new Map,Data={set(t,e,n){elementMap.has(t)||elementMap.set(t,new Map);const s=elementMap.get(t);s.has(e)||0===s.size?s.set(e,n):console.error(`CueSync doesn't allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`)},get:(t,e)=>elementMap.has(t)&&elementMap.get(t).get(e)||null,remove(t,e){if(!elementMap.has(t))return;const n=elementMap.get(t);n.delete(e),0===n.size&&elementMap.delete(t)}},toType=t=>null==t?`${t}`:Object.prototype.toString.call(t).match(/\s([a-z]+)/i)[1].toLowerCase(),isElement=t=>!(!t||"object"!=typeof t)&&void 0!==t.nodeType,getElement=t=>isElement(t)?t:"string"==typeof t&&t.length>0?document.querySelector(t):null;function normalizeData(t){if("true"===t)return!0;if("false"===t)return!1;if(t===Number(t).toString())return Number(t);if(""===t||"null"===t)return null;if("string"!=typeof t)return t;try{return JSON.parse(decodeURIComponent(t))}catch(e){return t}}function normalizeDataKey(t){return t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`))}const Manipulator={setDataAttribute(t,e,n){t.setAttribute(`data-cs-${normalizeDataKey(e)}`,n)},removeDataAttribute(t,e){t.removeAttribute(`data-cs-${normalizeDataKey(e)}`)},getDataAttributes(t){if(!t)return{};const e={},n=Object.keys(t.dataset).filter((t=>t.startsWith("cs")&&!t.startsWith("csConfig")));for(const s of n){let n=s.replace(/^cs/,"");n=n.charAt(0).toLowerCase()+n.slice(1,n.length),e[n]=normalizeData(t.dataset[s])}return e},getDataAttribute:(t,e)=>normalizeData(t.getAttribute(`data-cs-${normalizeDataKey(e)}`))};class Config{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(t){return t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t}_mergeConfigObj(t,e){const n=isElement(e)?Manipulator.getDataAttribute(e,"config"):{};return{...this.constructor.Default,..."object"==typeof n?n:{},...isElement(e)?Manipulator.getDataAttributes(e):{},..."object"==typeof t?t:{}}}_typeCheckConfig(t,e=this.constructor.DefaultType){for(const n of Object.keys(e)){const s=e[n],i=t[n],r=isElement(i)?"element":toType(i);if(!new RegExp(s).test(r))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${n}" provided type "${r}" but expected type "${s}".`)}}}const VERSION="1.0.0";class BaseComponent extends Config{constructor(t,e){super(),(t=getElement(t))&&(this._element=t,this._config=this._getConfig(e),Data.set(this._element,this.constructor.DATA_KEY,this))}dispose(){Data.remove(this._element,this.constructor.DATA_KEY);for(const t of Object.getOwnPropertyNames(this))this[t]=null}_getConfig(t){return t=this._mergeConfigObj(t,this._element),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}static getInstance(t){return Data.get(getElement(t),this.DATA_KEY)}static getOrCreateInstance(t,e={}){return this.getInstance(t)||new this(t,"object"==typeof e?e:null)}static get VERSION(){return"1.0.0"}static get DATA_KEY(){return`cs.${this.NAME}`}}const NAME="cuesync";class Cuesync extends BaseComponent{constructor(t,e){super(t),this._element=t,this._config=this._getConfig(e),this._autoScroll=!0,this._timeMaxWidth=0,this.refresh()}static get NAME(){return NAME}refresh(){const{transcriptPath:t}=this._config,{media:e}=this._config,{displayTime:n}=this._config;fetch(t).then((t=>t.text())).then((t=>{const s=this.parseTranscript(t);for(const[t,i]of s.entries()){const r=document.createElement("div");if(r.className="transcript-line",r.textContent=i.text.trim(),n){const t=document.createElement("div");t.className="transcript-line-container",t.setAttribute("aria-label",i.text.trim()),t.setAttribute("role","button");const n=document.createElement("span");n.className="time",n.textContent=`${i.startTimeRaw}`,t.append(n),t.append(r),this._element.append(t),t.addEventListener("click",(()=>{e.currentTime=i.startTime})),t.addEventListener("keypress",(t=>{"Enter"===t.key&&(e.currentTime=i.startTime)})),t.tabIndex=0,n.getBoundingClientRect().width>this._timeMaxWidth&&(this._timeMaxWidth=n.getBoundingClientRect().width)}else this._element.append(r),r.setAttribute("aria-label",i.text.trim()),r.setAttribute("role","button"),r.addEventListener("click",(()=>{e.currentTime=i.startTime})),r.addEventListener("keypress",(t=>{"Enter"===t.key&&(e.currentTime=i.startTime)})),r.tabIndex=0;this._element.addEventListener("scroll",(()=>{this._autoScroll&&(this._autoScroll=!1)})),this.addMediaEventListener(r,s,i,t)}this._timeMaxWidth&&this._element.style.setProperty("--cs-time-width",`${this._timeMaxWidth}px`)})).catch((t=>console.error("Error loading transcript file:",t)))}parseTranscript(t){const e=[],n=t.split("\n");let s=null;for(let t of n)if(t=t.trim(),t||(s&&e.push(s),s=null),s||!/^\d+$/.test(t))if(t.includes("--\x3e")){const[e,n]=t.split(/ --> /);s=new VTTCue(this.convertToSeconds(e),this.convertToSeconds(n),""),s.startTimeRaw=this.minimalTime(e)}else s&&(s.text+=`${t} `);return s&&e.push(s),e}convertToSeconds(t){const[e,n,s]=t.split(/:|,/).map(Number.parseFloat);return(3600*e+60*n+s).toFixed(2)}minimalTime(t){const[e,n,s]=t.split(/:|,/).map(Number.parseFloat);return`${0===e?"":`${e} : `} ${n} : ${Math.trunc(s)}`}autoScroll(t){if(this._autoScroll)this.scrollToView(t);else{const e=this._element.getBoundingClientRect(),n=t.getBoundingClientRect();n.top>=e.top&&n.bottom<=e.bottom&&(this._autoScroll=!0)}}scrollToView(t){const e=t.parentElement,n=t.offsetTop-e.offsetTop,s=t.offsetHeight,i=e.clientHeight,r=e.scrollTop;n<r?e.scrollTo({top:n,left:0,behavior:"smooth"}):n+s>r+i&&e.scrollTo({top:n+s-i,left:0,behavior:"smooth"})}addMediaEventListener(t,e,n,s){const{media:i}=this._config,{displayTime:r}=this._config;i.addEventListener("timeupdate",(()=>{s===e.length-1&&i.currentTime>=n.startTime||i.currentTime>=n.startTime&&i.currentTime<n.endTime?(r?t.closest(".transcript-line-container").classList.add("active"):t.classList.add("active"),this.autoScroll(t)):(r?t.closest(".transcript-line-container").classList.remove("active"):t.classList.remove("active"),i.currentTime>=n.startTime?r?t.closest(".transcript-line-container").classList.add("played"):t.classList.add("played"):r?t.closest(".transcript-line-container").classList.remove("played"):t.classList.remove("played"))}))}redrawTime(){const t=Array.prototype.slice.call(this._element.querySelectorAll(".time"));if(t){let e=0;for(const n of t)n.getBoundingClientRect().width>e&&(e=n.getBoundingClientRect().width);e&&this._element.style.setProperty("--cs-time-width",`${e}px`)}}}export{Cuesync as CueSync};
//# sourceMappingURL=cuesync.esm.min.js.map